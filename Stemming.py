text=[" ವಿದ್ಯಾರ್ಥಿಗಳು ,ವಿದ್ಯಾರ್ಥಿಗಾಗಿ ,ವಿದ್ಯಾರ್ಥಿಗಳು,ವಿದ್ಯಾರ್ಥಿಗೂ,ವಿದ್ಯಾರ್ಥಿ,ವಿದ್ಯಾರ್ಥಿಗೂ,ವಿದ್ಯಾರ್ಥಿಗಳು,ವಿದ್ಯಾರ್ಥಿಗಳ,ವಿದ್ಯಾರ್ಥಿಗಳಲ್ಲಿ,ವಿದ್ಯಾರ್ಥಿಗಳಲ್ಲಿರುವ,ವಿದ್ಯಾರ್ಥಿಗಳನ್ನು", 
"ವಿದ್ಯಾರ್ಥಿಗಳನ್ನು,ವಿದ್ಯಾರ್ಥಿಗಳೆಂದರೆ,ವಿದ್ಯಾರ್ಥಿಗಳಿಂದ,ವಿದ್ಯಾರ್ಥಿಗಳಿಗಾಗಿ,ವಿದ್ಯಾರ್ಥಿಗಳಿಗೂ,ವಿದ್ಯಾರ್ಥಿಗಳಿಗೆ,ವಿದ್ಯಾರ್ಥಿಗಳಿಗಿಂತ",
"ವಿದ್ಯಾರ್ಥಿಗಳಿರಬೇಕು,ವಿದ್ಯಾರ್ಥಿಗಳೊಂದಿಗೆ,ವಿದ್ಯಾರ್ಥಿಗಳು,ವಿದ್ಯಾರ್ಥಿಗೆ,ವಿದ್ಯಾರ್ಥಿನಿಯರ,ವಿದ್ಯಾರ್ಥಿನಿಲಯ,ವಿದ್ಯಾರ್ಥಿನಿಲಯದ",
"ವಿದ್ಯಾರ್ಥಿನಿಲಯದಲ್ಲಿ,ವಿದ್ಯಾರ್ಥಿನಿಲಯಗಳು,ವಿದ್ಯಾರ್ಥಿನಿಲಯಕ್ಕೆ,ವಿದ್ಯಾರ್ಥಿಯಾಗಿ,ವಿದ್ಯಾರ್ಥಿಯಾಗಿದ್ದಾಗ,ವಿದ್ಯಾರ್ಥಿಯಾಗಿದ್ದ,ವಿದ್ಯಾರ್ಥಿಯಾಗಿದ್ದರು",
"ವಿದ್ಯಾರ್ಥಿಯಾಗಿದ್ದೆ,ವಿದ್ಯಾರ್ಥಿಯು,ವಿದ್ಯಾರ್ಥಿ,ವಿದ್ಯಾರ್ಥಿಯ,ವಿದ್ಯಾರ್ಥಿಯನ್ನು,ವಿದ್ಯಾರ್ಥಿಯೊಬ್ಬನ,ವಿದ್ಯಾರ್ಥಿಯು"]

text2=[" ಸೇವಕ ಸೇವಕನು ಸೇವಕರು ಸೇವಕನನ್ನು ಸೇವಕರನ್ನು ಸೇವಕನಿಂದ ಸೇವಕರಿಂದ ಸೆವಕ್ನಿಗೆ ಸೇವಕರಿಗೆ ಸೇವಕನ ಸೇವಕರ ಸೇವಕನಲ್ಲಿ ಸೇವಕರಲಿ ಸೇವಕನೆ ಸೇವಕರೇ "]
text3=["ಅನುಭವ ಅನುಭವವಿಲ್ಲದ ಅನುಭವವಿಲ್ಲದಂತ ಅನುಭವವಿಲ್ಲದಂತಹ ಅನುಭವಹೀನ ಅನುಭವಹೀನವಾದ ಅನುಭವಹೀನವಾದಂತ ಅನುಭವಹೀನವಾದಂತಹ ನುರಿತ್ತಿಲ್ಲದ ನುರಿತ್ತಿಲ್ಲದಂತ ನುರಿತ್ತಿಲ್ಲದಂತಹ ಅನುಭವರಹಿತ ಅನುಭವರಹಿತವಾದ ಅನುಭವರಹಿತವಾದಂತ ಅನುಭವರಹಿತವಾದಂತಹ"]
suffix1=[' ಗಳು ', 'ಗಾಗಿ ', 'ಗಳು', 'ಗೂ', '', 'ಗೂ', 'ಗಳು', 'ಗಳ', 'ಗಳಲ್ಲಿ', 'ಗಳಲ್ಲಿರುವ', 'ಗಳನ್ನು', 'ಗಳನ್ನು', 'ಗಳೆಂದರೆ', 'ಗಳಿಂದ', 'ಗಳಿಗಾಗಿ', 'ಗಳಿಗೂ', 'ಗಳಿಗೆ', 'ಗಳಿಗಿಂತ', 'ಗಳಿರಬೇಕು', 'ಗಳೊಂದಿಗೆ', 'ಗಳು', 'ಗೆ', 'ನಿಯರ', 'ನಿಲಯ', 'ನಿಲಯದ', 'ನಿಲಯದಲ್ಲಿ', 'ನಿಲಯಗಳು', 'ನಿಲಯಕ್ಕೆ', 'ಯಾಗಿ', 'ಯಾಗಿದ್ದಾಗ', 'ಯಾಗಿದ್ದ', 'ಯಾಗಿದ್ದರು', 'ಯಾಗಿದ್ದೆ', 'ಯು', '', 'ಯ', 'ಯನ್ನು', 'ಯೊಬ್ಬನ', 'ಯು']
suffix=list()
elist=list()
for i in text3:
    elist.append(i.split())
    
list1=list()
for i in elist:
    for j in i:
        list1.append(j)

print(list1)

root_word=list1[0]
len_min=len(root_word)

#generation of root word
for i in list1:
    if(len(i)<len_min):
        root_word=i
        len_min=len(i)

print("###",root_word)

for i in list1:
    string=i
    if(string.startswith(root_word)):
        print("rootword for ", string, " is", root_word)
        suffix.extend([x.replace(root_word, '') for x in list1])

suffix=set(suffix)
suffix=list(suffix)


print(suffix)
print(len(suffix))
